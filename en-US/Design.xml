<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Conventions_for_Writers_and_Editors.ent">
%BOOK_ENTITIES;
]>
<chapter id="design">
	<title>Design</title>
	 <xi:include href="Book_Design.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	 <section id="heading-styles">
		<title>Heading Styles</title>
    <para>
      This section covers various aspects of heading styles and design.
      If your company or organization has specific requirements in this regard, follow those requirements first.
    </para>
		 <formalpara id="capitalization">
				<title>Capitalization</title>
					<para>
						The standard for all Red&nbsp;Hat technical documentation is title case for all headings and titles.
            Table headings, procedure headings, and formal paragraph titles fall under this heading, and consequently, standard title case capitalization rules apply.
            The currently accepted reference for determining title case is at <ulink url="https://titlecase.com/titlecase">https://titlecase.com/titlecase.</ulink>
					</para>
		  </formalpara>
					 <para>
						Use sentence case for captions, legends, diagram labels, and table column headers.
            They are not classified as titles.
					</para>
					 <warning>
						<title>Marketing and Brand Capitalization Guide</title>
						 <para>
							The Red&nbsp;Hat Marketing and Brand groups use sentence case for most titles and headings, with some exceptions, for example, when referencing an externally produced resource's title.
						</para>

					</warning>

      <formalpara>
        <title>Punctuation</title>

          <para>
            Be frugal with punctuation.
            In most cases, avoid semicolons, colons, dashes, and similar punctuation unless part of the actual subject, or a proper name.
            Do not use terminating periods.
            </para>
          </formalpara>
<!-- Commenting out this section following a change of advice. 
			 <formalpara id="imperative-mood">
				<title>Avoid Imperative Mood</title>
					<para>
						Use the gerund form (noun form of verb) for titles, not the imperative mood. For example, "Testing the Product", not "Test the Product".
					</para>

          </formalpara>
					 <para>
						See the <citetitle>IBM Style Guide</citetitle> for more information.
					</para>
					 <important>
						<para>
							Gerunds should be avoided elsewhere.
              See <xref linkend="sentence-structure" />.
						</para>
					</important> -->
      <formalpara>
        <title>File Names, Commands, and Related Terms</title>
          <para>
            When creating chapter and section titles, do not include file, command, or similar names, and do not include markup elements.
            Instead, focus on the task at hand and introduce the required file and command names in the text.
            Including such objects in titles is generally considered poor technical writing practice.
            Depending on how your documentation is built and delivered, including these object types can result in unpredictable results and can even cause failed builds.
          </para>
		</formalpara>

	</section>
	 <section id="documenting-fonts">
		<title>Documenting Fonts</title>
		 <para>
			The preferred way to refer to each type of PostScript font is "PostScript Type x," substituting "x" with either 1, 2, or 3, if the problem is specific to a particular type.
		</para>

	</section>
	 <section id="documenting-ui">
		<title>Documenting the User Interface</title>
		 <para>
			In all cases, see the <citetitle>IBM Style Guide</citetitle> for initial guidance.
      The following sections highlight exceptions or cases that might otherwise cause confusion.
		</para>
		 <section id="gui-elements-punctuation">
			<title>User Interface (UI) Elements, Punctuation, and Symbols</title>
			 <para>
				When describing UI elements, do not include punctuation that appears on those elements, unless omission of that punctuation might lead to confusion.
			</para>
			 <para>
				For example, for a button labeled <guibutton>Save As...</guibutton>, do not include the ellipsis in the documentation.
			</para>
      <para>
        In most cases, do not include the element type in instructions.
        For example, rather than "Click the <guibutton>Save</guibutton> button," write "Click <guibutton>Save</guibutton>."
      </para>
      <para>
        In some cases it is preferred practice to include the object type for the sake of clarity.
        Consider the following:
      </para>
      <example><title>Preferred Style for Documenting Symbols and Other Special Characters</title>
        <para>
          Click the <guibutton>+</guibutton> sign.
        </para>
        <para>
          Click the <guibutton>^</guibutton> symbol.
        </para>
      </example>
      <para>
        If you cannot easily reproduce the symbol, include a screen capture, or a succinct description of the object type, or both.
        Use this approach for icons, especially when they have no tooltip or other help text.
      </para>
      <example><title>Preferred Style for Documenting Icons</title>
        <para>
          Click the <guiicon>Upload</guiicon> (<guiicon><inlinemediaobject>
            <imageobject>
              <imagedata fileref="images/reload.png"/>
            </imageobject>
          </inlinemediaobject></guiicon>) icon to upload the files to the server.
        </para>
      </example>
			 <para>
				See the <citetitle>UI elements</citetitle> chapter in the <citetitle>IBM Style Guide</citetitle> for more information.
			</para>
			<section>
			 <title>Navigating Through Multiple UI Options</title>
				 <para>
					 Use "Navigate to" when moving through multiple UI options because it covers all cases where you might have to click, point to, press, select, or otherwise make a series of selections to initiate an action.
				 </para>
				 <para>
					 For example, "From the OpenShift web console, navigate to Monitoring → Alerting."
				 </para>

		 </section>
		</section>
		 <section id="starting-apps">
			<title>Starting Applications from the Desktop</title>
			 <para>
			 	This section describes how to start applications from a Red&nbsp;Hat Enterprise&nbsp;Linux-based distribution.
			</para>
			 <para>
				RHEL&nbsp;8 uses the following approach to starting applications from the desktop.
				In an effort to maintain consistency and to make translation easier, Red&nbsp;Hat documentation assumes use of GNOME Classic, the default user interface, and prefers a consistent approach to instructing customers how to start applications.
			</para>
			 <para>
				The preferred approach is to use the <keycap>Super</keycap> key to enter the Activities Overview, to enter the name of the required application, and to press <keycap>Enter</keycap>.
				The <keycap>Super</keycap> key appears in various guises, depending on the keyboard and other hardware, but often as either the <keysym>Windows</keysym> or <keysym>Command</keysym> key, and typically to the left of the <keycap>Spacebar</keycap>. For example:
			</para>
			 <example id="exam-starting-apps">
				<title>Preferred Approach to Starting Applications from the Desktop</title>
				 <para>
					To start <command>gedit</command>, press the <keycap>Super</keycap> key to enter the Activities Overview, type <literal>gedit</literal>, and then press <keycap>Enter</keycap>.
				</para>

			</example>

		</section>
		 <section id="documenting-command-syntax">
			<title>Documenting Command Terminology and Syntax</title>
      <para>
        Sufficient variation exists in the terminology that is used to describe commands, options, arguments, and so on that only general advice is provided here.
      </para>
      <para>
        When referring to the command line as specified by Bash and POSIX, follow the terminology that the software uses.
        Never use "flag" when referring to command-line options in POSIX, even though Microsoft often uses the term "flag" when referring to single-character options in Microsoft Windows.
      </para>
      <para>
        The following extract from <command>info libc</command> is of particular interest here:
      </para>
      <blockquote>
        <para>
          "POSIX recommends these conventions for command line arguments. [...] Arguments are options if they begin with a hyphen delimiter (‘-’). Multiple options may follow a hyphen delimiter in a single token if the options do not take arguments. Thus, ‘-abc’ is equivalent to ‘-a -b -c’. [...] Certain options require an argument. For example, the ‘-o’ option of the ‘ld’ command requires an argument—an output file name." and so on.
        </para>
        <para>
          See <command>info libc argument syntax</command> for the full discussion.
        </para>
        </blockquote>
      <para>
        See <command>info bash</command> and the <citetitle>IBM Style Guide</citetitle> for further guidance.
      </para>
			 <para>
        The following examples are intended to highlight correct usage.
			</para>
			 <example id="exam-documenting-command-syntax">
				<title>Cloning a Git Repository</title>
				 <para>

<screen>$ git clone <replaceable>[username@]hostname:/repository_filename [directory]</replaceable></screen>

				</para>

			</example>
			 <para>
				In <xref linkend="exam-documenting-command-syntax" />, the entire command consists of the following components:
			</para>
			 <variablelist>
				<varlistentry id="command-syntax-prompt">
					<term>The prompt (<prompt>$</prompt>)</term>
					 <listitem>
						<para>
							Indicates that a normal user can run the command, as compared to the <systemitem>root</systemitem> user, which would be indicated by the number sign (<prompt>#</prompt>).
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="command-git-clone">
					<term>The command (<command>git clone</command>)</term>
					 <listitem>
						<para>
							The actual command to run, without any optional or replaceable values.
              It must be typed as-is.
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="source-options">
					<term>Source options <replaceable>[username@]hostname:/repository_filename</replaceable>)</term>
					 <listitem>
						<para>
							The optional username, indicated by brackets ([]), followed by the hostname and path to the repository.
              All aspects of this component must be replaced with valid values.
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="target-options">
					<term>Target options <replaceable>[directory]</replaceable></term>
					 <listitem>
						<para>
							The optional directory into which the repository will be cloned.
              It must be replaced with a valid value, or be omitted.
						</para>

					</listitem>

				</varlistentry>

			</variablelist>
			 <example id="exam-secure-copy">
				<title>Securely Copying a File Between Hosts</title>

<screen>$ scp <replaceable>filename [username@]hostname:/directory</replaceable></screen>

<!-- Pruned redundant repeated information from the previous section. -->
			</example>
			 <para>
				In <xref linkend="exam-secure-copy" />, the entire command consists of the following components:
			</para>
			 <variablelist>
				<varlistentry id="command-prompt">
					<term>The command prompt (<prompt>$</prompt>)</term>
				<listitem>
						<para>
							<!-- Indicates that a normal user can run the command, as compared to the <systemitem>root</systemitem> user, which is indicated by the number sign (<prompt>#</prompt>). -->
						</para>

					</listitem>

          </varlistentry>
				 <varlistentry id="command-scp">
					<term>The command (<command>scp</command>)</term>
				<listitem>
						<para>
							<!-- The actual command to run, without any optional or replaceable values. It must be typed as-is. -->
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="command-syntax-source-filename">
					<term>Source options (<replaceable>filename</replaceable>)</term>
					 <listitem>
						<para>
							The file name to copy. It must be replaced with a valid value.
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry>
					<term>Target options (<replaceable>[username@]hostname:/directory</replaceable>)</term>
					 <listitem>
						<para>
							The optional username, indicated by brackets ([]), followed by the hostname and path to the target directory. All aspects of this component must be replaced with valid values.
						</para>

					</listitem>

				</varlistentry>

			</variablelist>
			 <warning>
				<para>
					In most cases, avoid using the <option>--force (-f)</option> and <option>--assumeyes (-y)</option> options on most commands, especially when logged in as the <systemitem>root</systemitem> user. This can lead to unintended consequences, such as removing files or directories by mistake or installing packages or other software that might not suit your system. Refer to the following examples:
				</para>

<screen>[root@serverc pam.d]# rm -f system-auth password-auth
[root@serverc ~]# yum install -y new-package
</screen>
<para>
  In these examples, omit the <option>-f</option> and <option>-y</option> options, respectively.
</para>
				 <para>
					In some cases, such as in Ansible Playbooks or other automation scripts, it might be necessary to use these options.
				</para>

			</warning>
			 <section>
				<title>Documenting Multiple or Long Commands</title>
				 <para>
					Sometimes you need to demonstrate how to use long commands that extend over two or more lines, or that include several commands in a single example. If the commands are relatively short and straightforward, include the commands on consecutive lines:
				</para>
				 <example>
					<title>Documenting Multiple Commands</title>

<screen>$ cd Documents
$ vi myFile.txt
</screen>

				</example>
				 <para>
					If the commands are long, complex, or wrap over multiple lines, two design options are available.
          </para>
          <itemizedlist>
            <listitem>
              <para>
                Use line continuation characters and the associated PS2 prompts.
                If you are documenting commands on a different operating system, update the prompts and line continuation characters to suit.
              </para>
            </listitem>
            <listitem>
              <para>
                Use neither line continuation characters nor the associated PS2 prompts.
              </para>
            </listitem>
          </itemizedlist>
          <important>
            <para>
              Do not mix these two styles.
              Maintain the same style throughout your document or book.
            </para>
          </important>
          <para>
            You can also indent the second and subsequent lines of such commands to assist in clarity and readability if required.
            You can use this option for either of these two designs.
          </para>

				 <example>
					<title>Wrapping Long Commands with Continuation Characters</title>
          <para>
            This example uses both continuation characters and PS2 prompts.
            These indicators are always used together.
          </para>

<screen># tar --selinux -czvf config_files.tar.gz  /etc/katello \
> /etc/elasticsearch /etc/candlepin /etc/pulp /etc/gofer \
> /etc/grinder /etc/pki/katello /etc/pki/pulp /etc/qpidd.conf \
> /etc/sysconfig/katello /etc/sysconfig/elasticsearch \
> /root/ssl–build /var/www/html/pub/* /var/lib/katello</screen>
          </example>

<example><title>Wrapping Long Commands Without Continuation Characters</title>
  <para>
    This example uses neither continuation characters nor PS2 prompts, but it does demonstrate how to use line indentation to help to clarify long commands.
  </para>
<screen># cd /var/lib/katello

# myCommand --option funky --color=true
  --config_file=/home/user/config.conf
  --output_file=/home/user/output.txt</screen>

				</example>

			</section>

      <section id="replaceable-paths">
        <title>Referring to Replaceable Paths</title>
          <para>
            To refer to a path that users need to replace with something that is specific to their system, use the appropriate markup for your content, the correct syntax for the system and object in question, and an indicative name.
            Use a leading slash if the absolute path is required.
          </para>
          <example><title>Referring to Replaceable Paths on Linux Systems</title>
            <para>
              "Mount the ISO file in <replaceable>/path/to/iso/file</replaceable>."
            </para>
          </example>
          <para>
            Remember to use the appropriate syntax for the system that you are documenting or describing.
          </para>
          <example><title>Referring to Replaceable Paths on Microsoft Windows Systems</title>

          <para>
            "Mount the ISO file in <replaceable>C:\path\to\iso\file</replaceable>."
          </para>
          </example>
          <para>
            If you are referring to a different object class or type with different delimiters, use the appropriate delimiters.
            For example:
          </para>
          <para>
            A PATH variable for Bash might appear as <replaceable>/usr/bin:/usr/local/bin</replaceable>.
          </para>
          <para>
            A package path in Lua might appear as <replaceable>local.share.lua</replaceable>.
          </para>
        </section>

		</section>
    <section><title>Using Escalated Privileges Correctly</title>

      <para>
        The term <firstterm>escalated privileges</firstterm> refers to changing to a user whose privileges allow operations that a normal user cannot access.
        It also refers to temporarily changing the privileges of the current user to perfom those operations without actually changing user accounts.
      </para>
      <note>
        <para>
          This section is aimed primarily at Red&nbsp;Hat Training course material, but the principles and guidelines apply equally in any environment.
        </para>
      </note>
      <note><title>Classroom Exceptions</title>
        <para>
          Although security is important, it is more important that classroom security does not unnecessarily distract from the immediate topic that is being taught.
        </para>
      </note>
      <section><title>General Recommendations</title>
          <para>
            The following are <emphasis>recommendations</emphasis>, not rules.
            As in most matters, consistency is important.
            Do not swap between different approaches without reason.
            Choose which approach works best for your situation and use it consistently.
          </para>
        <itemizedlist>
          <listitem>
            <para>
              In all cases, use the minimum required privilege level to achieve the task.
            </para>
          </listitem>
          <listitem>
            <para>
              Use a consistent approach when giving instructions to change users.
              For example: "Connect to the cluster node and become the <systemitem>root</systemitem> user."
            </para>
            <para>
              Variations such as "become <systemitem>root</systemitem>" or similar are strongly discouraged.
            </para>
          </listitem>
          <listitem>
            <para>
              Use <command>sudo</command> and <command>sudo -i</command> and set it up to work throughout all relevant systems.
              Do not use <command>su -</command> without good cause.
            </para>
          </listitem>
          <listitem>
            <para>
              When a scattered minority of privileged commands occur in a mostly unprivileged exercise, use <command>sudo</command> on a per-command basis.
            </para>
          </listitem>
          <listitem>
            <para>
              When the exercise is majority privileged, or has many privileged commands, use <command>sudo -i</command>, either at the beginning of the exercise, or at an appropriate step where the privileged commands begin.
            </para>
          </listitem>
          <listitem>
            <para>
              In the narrative, do not show the use of <command>su</command> or <command>sudo</command>, but always show privileged commands with the correct prompt.
              See <xref linkend="exam-documenting-command-syntax"/> for information about command prompts.
            </para>
          </listitem>
        </itemizedlist>

      <note>
        <para>
          Some courses are specifically designed to teach <command>sudo</command> and its variations, the use of the related files, such as <filename>/etc/sudoers</filename>, and so on.
          For these courses, use the required variation for the topic that is being taught.
        </para>
      </note>
      </section>
      <section><title>Ansible Courses</title>
        <itemizedlist>
          <listitem>
            <para>
              Ansible courses typically use a <systemitem>devops</systemitem> user with passwordless sudo access (<code>devops	ALL=(ALL)	NOPASSWD: ALL</code>) on managed nodes to enable the use of <command>become</command> without a <command>become</command> password as <systemitem>root</systemitem> to do anything.
            </para>
          </listitem>
          <listitem>
            <para>
              As much as possible, leave the system-wide default as <varname>become: false</varname> or <varname>become: no</varname> and if a single task needs privileges, set <varname>become: true</varname> or <varname>become: yes</varname> on that task.
            </para>
          </listitem>
          <listitem>
            <para>
              If most tasks in a play require escalated privileges, set the entire play to <varname>become: true</varname> or <varname>become: yes</varname> and possibly selectively set individual tasks to <varname>become: false</varname> or <varname>become: no</varname>.
            </para>
          </listitem>
        </itemizedlist>
        </section>
<!--       </section> -->


    </section>

		 <section id="view-edit-files">
			<title>Describing How to View and Edit Files</title>
			 <para>
				To describe how to view and edit files, such as configuration files, scripts, and so on, do not include editor names as part of the guidance, unless the topic is about a specific editor, or is otherwise necessary to achieve a wanted result.
			</para>
			 <para>
				For example, do not refer to <command>cat</command> or <command>vi</command> if you need to tell readers to "view the <filename>my-script</filename> file." If you need to tell readers to edit a file and add or remove content, write "Edit the <filename>my-script</filename> file and add the following content:" and then include the required content in a &lt;screen&gt; block. Use &lt;code&gt; tags to highlight the text to change. Include some surrounding text in the file for context. Do not use line numbers as a reference point because they can change.
			</para>
			 <para>
				If the file to edit is empty or does not exist, do not use &lt;code&gt; tags to highlight any content to add.
			</para>
			 <para>
				You can also use <systemitem>here</systemitem> documents to describe how to create a file with required content. The syntax of <systemitem>here</systemitem> documents varies by system, shell, language, and so on. The following example creates the <filename>my-script</filename> file in the current directory, with the example content.
			</para>

<screen><![CDATA[$ cat << EOF > my-script
> # The first line of text
> # The second line
> # Start adding variables after this line
> EOF]]></screen>
			 <para>
				In some cases, it is necessary to indicate which tool to use to view a file, especially for log files and other long files. In these cases, suggest a viewer based on the operating system or environment in which you are working, such as <command>tail</command>, <command>head</command>, <command>less</command>, or <command>journalctl</command>.
			</para>

		</section>
		 <section id="use-hostnames-correctly">
			<title>Using Host and Usernames Correctly</title>
			 <para>
				Many examples in Red&nbsp;Hat documentation require the use of usernames, hostnames, IP addresses, and similar information. In an effort to reduce security risks, to minimize translation overhead, and to maintain consistency, Red&nbsp;Hat recommends the following approach.
			</para>
			 <note>
				<para>
					All names are lowercase. Do not use white space in any part of the name.
				</para>

			</note>
			 <itemizedlist>
				<listitem>
					<para>
						Use <ulink url="http://tools.ietf.org/search/rfc2606">RFC 2606</ulink> to determine suitable domain names. For documentation and example purposes, it is typically <systemitem>example.com</systemitem>, <systemitem>example.net</systemitem>, <systemitem>example.org</systemitem>, and <systemitem>example.edu</systemitem>.
					</para>
					 <important>
						<para>
							Do not use valid, public IP addresses in any examples.
						</para>

					</important>

				</listitem>
				 <listitem>
					<para>
						As much as possible, use <systemitem>user</systemitem>, <systemitem>username</systemitem>, <systemitem>root</systemitem>, <systemitem>admin</systemitem>, or similar names to identify classes of users.
					</para>
					 <para>
						Use these generic names when you refer to users outside a case study. It helps students to identify which part of a command to replace, by establishing a consistent format for names of users and system items. For example:
					</para>

<screen><prompt>[root@fedora ~]# </prompt><userinput>setfacl -m u:user1:rw /project/file1</userinput></screen>
					 <para>
						The following list provides further alternatives:
					</para>
					 <itemizedlist>
						<listitem>
							<para>
								<systemitem>operator1</systemitem> to <systemitem>operator9</systemitem>
							</para>

						</listitem>
						 <listitem>
							<para>
								<systemitem>developer1</systemitem> to <systemitem>developer9</systemitem>
							</para>

						</listitem>
						 <listitem>
							<para>
								<systemitem>architect1</systemitem> to <systemitem>architect9</systemitem>
							</para>

						</listitem>

					</itemizedlist>

				</listitem>

			</itemizedlist>
			 <section id="using-extended-names">
				<title>Using Extended User and Group Names</title>
				 <para>
					Sometimes, the recommended list of user and group names is too restrictive for the scope of a book or article. In such cases, the following extended model is acceptable.
				</para>
				 <formalpara id="using-realistic-names">
					<title>Using Realistic Usernames</title>
					 <para>
						When you are writing a detailed case study, such as training exercises, reviews, and similar material, use realistic names. These names should not be real people. In other words, do not use the name of an employee, a well-known person, or your neighbor.
					</para>

				</formalpara>
				 <para>
					For example, you are the system administrator at Global Banking and you are asked to set up permissions to the accounting directory for the following users: John Doe, Sunni Koning, Huong Sabo, and Jerlene Paluch. John is a department manager and needs read access to the accounting directory. Sunni is the lead accountant and needs both read and write access.
				</para>
				 <formalpara id="choosing-realistic-names">
					<title>Choosing a Realistic Name</title>
					 <para>
						Consider the following points when choosing a realistic name: <footnote> <para>
							Examples taken from the <citetitle>IBM Style Guide</citetitle> and the <citetitle>Google Developer Documentation Style Guide</citetitle>.
						</para>
						 </footnote>
					</para>

				</formalpara>
				 <itemizedlist>
					<listitem>
						<para>
							In examples or scenarios, you can use a person's name and then use a gender-specific pronoun to refer to that name. Vary the use of proper names in documentation. Use names that represent various ethnic backgrounds, genders, and locations.
						</para>

					</listitem>
					 <listitem>
						<para>
							Do not use copyrighted fictional characters in examples, and do not use real people.
						</para>

					</listitem>
					 <listitem>
						<para>
							Include a diverse set of names in your examples to reflect the diversity of the real world. For example, use male, female, and culturally diverse names that suggest a variety of backgrounds in examples to avoid implying that only certain groups have specific skills.
						</para>

					</listitem>

				</itemizedlist>
				 <formalpara id="sourcing-realistic-names">
					<title>Sourcing Realistic Names</title>
					 <para>
						You can use any of the following name generators to create realistic names for users:
					</para>

				</formalpara>
				 <itemizedlist>
					 <listitem>
						<para>
							<ulink url="http://listofrandomnames.com/">http://listofrandomnames.com/</ulink>
						</para>

					</listitem>
					 <listitem>
						<para>
							<ulink url="http://www.behindthename.com/random/">http://www.behindthename.com/random/</ulink>
						</para>

					</listitem>
					 <listitem>
						<para>
							<ulink url="http://random-name-generator.info/">http://random-name-generator.info/</ulink>
						</para>

					</listitem>

				</itemizedlist>
				 <formalpara id="using-extended-group-names">
					<title>Group Names</title>
					 <para>
						Use any lowercase name that is a logical extension of the accepted usernames, without the numerical suffix. For example, <systemitem>architects</systemitem>, <systemitem>developers</systemitem>, <systemitem>operators</systemitem>.
					</para>

				</formalpara>

			</section>

		</section>

	 	<section id="refer-object-names">
			<title>Referring to Object Names</title>
			 <para>
				Do not use object names as part of normative grammar. A sentence should be complete without the object name.
			</para>

			 <table>
			<title></title>
			 <tgroup cols="2" colsep="1" rowsep="1">
				<colspec colname="c1"></colspec>
				 <colspec colname="c2"></colspec>
				 <thead>
					<row>
						<entry> Example </entry>
						 <entry> Improvement </entry>

					</row>

				</thead>
				 <tbody>
					<row>
						<entry> Find the current default <systemitem>StorageClass</systemitem>. </entry>
						 <entry> Either: Find the current default storage class. Or: Find the current default <systemitem>StorageClass</systemitem> value. </entry>

					</row>

				</tbody>

			</tgroup>

		</table>

		</section>		

	</section>	 	
	 <section id="document-currencies">
		<title>Documenting Currencies</title>
		 <para>
			Use local currency symbols wherever possible. If symbol clash occurs (USD versus AUD, for example), disambiguate with the 2-character country code. For example, US$, AU$.
		</para>
		 <important>
			<para>
				Do not provide currency conversions.
			</para>

		</important>

	</section>
	 <section id="using-abbreviations">
		<title>Using Abbreviations, Acronyms, Initialisms, and Special Characters Correctly</title>
		 <para>
			This section describes how to use abbreviations, acronyms, and initialisms correctly in Red&nbsp;Hat documentation.
		</para>
		 <formalpara>
			<title>Abbreviations</title>
			 <para>
				An abbreviation is a shortened form of a word or phrase. For example, <abbrev>Pty.</abbrev> and <abbrev>Inc.</abbrev> are abbreviations for "proprietary" and "incorporated," respectively. Read them as the word for which they are an abbreviation.
			</para>

		</formalpara>
		 <formalpara id="acronyms">
			<title>Acronyms</title>
			 <para>
				What are acronyms anyway?
        They are similar to abbreviations and initialisms but they are pronounced as a word.
        An acronym is a word that is formed from the initial letters of a name, such as ROM for <emphasis>R</emphasis>ead-<emphasis>O</emphasis>nly <emphasis>M</emphasis>emory, or by combining initial letters or part of a series of words, such as LILO for <emphasis>LI</emphasis>nux <emphasis>LO</emphasis>ader.
        <acronym>COBOL</acronym> is the acronym for Common Business-oriented Language, and <acronym>POP</acronym> is the acronym for Post Office Protocol.
			</para>
		</formalpara>

		 <para>
			Consider pronunciation when using articles. For example, use "an <abbrev>RTS</abbrev> (real-time strategy)," because <abbrev>RTS</abbrev> is an initialism and you pronounce the first character as an "R" (är). Conversely, use "a <acronym>RAM</acronym> upgrade," because <acronym>RAM</acronym> is an acronym and you pronounce it as a word (răm).
		</para>

		 <para>
			Spell out most acronyms and initialisms before using them in text, such as "The Embedded DevKit (EDK) ..."
          	Unless the acronym or initialism stands for a proper noun, use sentence case for the spelled out version: for example, "central processing unit (CPU)."
          	Unless required for the audience or the topic, do not spell out well-known abbreviations, such as HTML.
		</para>

		 <para>
			To form the plural of an acronym, add a trailing, lowercase "s" or "es" without an apostrophe, for example, ROMs, PINs, BIOSes.
		</para>

		 <para>
			Be sure to use correct capitalization for acronyms. Not all acronyms are capitalized (for example, "spool"); see the <citetitle>IBM Style Guide</citetitle> or another suitable reference if you are unsure.
		</para>

		 <formalpara id="initialisms">
			<title>Initialisms</title>
			 <para>
				An initialism is an abbreviation that consists of the first letters of words in a phrase, syllables, or some combination thereof. Each character is pronounced separately. For example, <abbrev>FTP</abbrev> is an initialism for <systemitem class="protocol">File Transfer Protocol.</systemitem>
			</para>

		</formalpara>
		 <para>
			Consider pronunciation when using articles. See <xref linkend="acronyms" /> for more information.
		</para>
		 <formalpara id="special-characters">
			<title>Special Characters</title>
		 	 <para>
				Consider pronunciation when referring to file or directory names that begin with special characters, and use the correct indefinite article. 
			</para>		
		
		</formalpara>	
		 <para>			
			If a file or directory name begins with a special character, such as an underscore, then you need to pronounce that character.
		</para>

		 <para>	
			For example, using "an <filename>_build/</filename> directory" is correct, because you pronounce "an underscore build directory".
		</para> 			

		 <para>	
			Using "a <filename>-compile/</filename> directory" is correct, because you pronounce "a dash compile directory".
		</para> 

	</section>
	 <section id="product-names">
		<title>Using Company, Product, and Brand Names Correctly</title>
		 <para>
			Various restrictions apply to using company, product, and brand names in Red&nbsp;Hat documentation. Refer to internal sources for further conditions that might apply to your own products.
		</para>
		 <note>
			<para>
				In the following sections, "first use" refers to the first use of a name in body text. Titles, banners, and similar objects are not classified as "first use."
			</para>

		</note>
		 <itemizedlist>
			<listitem>
				<para>
					Restrictions apply to abbreviating Red&nbsp;Hat product or solution names in public-facing documents. Always use the full name on first use. For some products, for example Red&nbsp;Hat OpenShift Container Platform, you can omit "Red&nbsp;Hat" after the first use.
				</para>

			</listitem>
			 <listitem>
				<para>
					Further restrictions apply to using acronyms and initialisms. In this same example, and only in technical documentation, "RHOCP" is acceptable after the first use of the full product name.
				</para>

			</listitem>
			 <listitem>
				<para>
					Do not include "Inc." when referring to Red&nbsp;Hat except in legal documents.
				</para>

			</listitem>
			 <listitem>
				<para>
					Do not use articles in front of product names. For example, do not write "the JBoss Enterprise&nbsp;Application&nbsp;Platform was..."
				</para>
				 <note>
					<para>
						In this case, "Platform" is part of the product name. In other cases, words like "platform," "manager," and so on might not be part of the product name, in which case an article is acceptable, if not necessary.
					</para>

				</note>

			</listitem>
			 <listitem>
				<para>
					Do not hyphenate or break a product name across lines, as in the following incorrect example:
				</para>
					<programlisting>
					Open
					-Shift
					</programlisting>
			</listitem>
		</itemizedlist>

	</section>
	 <section id="nonbreaking-spaces">
		<title>Using Non-breaking Spaces</title>
		 <para>
			Use a non-breaking space in the following situations to avoid a break across lines:
		</para>
				 <itemizedlist>
					<listitem>
						<para>
							In the company name, between "Red" and "Hat".
						</para>

					</listitem>
					 <listitem>
						<para>
							In a product name, between the last word and a version number.
						</para>

					</listitem>

				</itemizedlist>
		 <para>
			Examples (for AsciiDoc):
		</para>
				 <itemizedlist>
					<listitem>
						<para>
							Red&#123;nbsp&#125;Hat Enterprise Linux&#123;nbsp&#125;8
						</para>

					</listitem>
					 <listitem>
						<para>
							Red&#123;nbsp&#125;Hat OpenShift Container Platform&#123;nbsp&#125;4.9
						</para>

					</listitem>

				</itemizedlist>

		 <para>
			If you are working with images or other objects where space is especially tight, this rule is more flexible, but "Red&nbsp;Hat" should never be broken over two lines.
		</para>
		 <para>    
			Non-breaking spaces are not needed elsewhere in a product name and might cause undesirable line-breaking behavior.
			In particular, do not use non-breaking spaces between extended components of Red&nbsp;Hat product names. For example, "Red&nbsp;Hat Enterprise Linux OpenStack Platform" does not require a non-breaking space between any of the words after "Red&nbsp;Hat".
		</para>
		<para>
			Do not use non-breaking spaces with other companies' product names.
		</para>

	</section>
	 <section id="version-numbers">
		<title>Using Version Numbers Correctly</title>
		 <para>
			The preferred format for product names includes only the major version number. For example:
			<itemizedlist>
				<listitem>
					<para>
						Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;8
					</para>

				</listitem>
				 <listitem>
					<para>
						JBoss Enterprise&nbsp;Application&nbsp;Platform&nbsp;3
					</para>

				</listitem>

			</itemizedlist>

		</para>
		 <para>
			When writing about a product line, product release, or product family, use major version numbers. It includes all the releases (past, present, and future) of that major version.
		</para>
		 <para>
			Only use minor version numbers when you are referring to a specific minor release, or to a feature that is specific to that minor release. For example:
			<itemizedlist>
				<listitem>
					<para>
						Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;5.2 was released on October 12, 2010.
					</para>

				</listitem>
				 <listitem>
					<para>
						&lt;Application name&gt; was first included in JBoss Enterprise&nbsp;Application&nbsp;Platform&nbsp;3.2.
					</para>

				</listitem>

			</itemizedlist>

		</para>
		 <para>
			In most cases, major changes take place in major version releases, and are carried through any minor updates to that release. If you are referring to a major change, or to the first appearance of a new technology, it is therefore most accurate to refer to the major release.
		</para>
		 <para>
			Avoid using the "dot-oh" release number. For example, do not use Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;6.0. Use instead Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;6.
		</para>
		 <important>
			<para>
				This rule applies only to Red&nbsp;Hat products. Refer to other companies' products and use their version numbers as they use them.
			</para>

		</important>

	</section>
	 <section id="admonitions">
		<title>Using Admonitions</title>
		 <para>
			To call attention to a statement, use an admonition. Red&nbsp;Hat technical documentation currently uses <command>Note</command>, <command>Important</command>, and <command>Warning</command> admonitions.
		</para>
		 <para>
			Admonitions automatically include a suitable title according to the type of admonition. Do not use a phrase or anything else for the title. Keep in mind these considerations if using admonitions:
			<itemizedlist>
				<listitem>
					<para>
						Keep the statements as brief and to the point as possible.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use admonitions sparingly so that they do not lose their effectiveness.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use a <command>Note</command> admonition to bring additional information to the user's attention.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use an <command>Important</command> admonition to show the user a piece of information that should not be overlooked. While this information might not change anything that the user is doing, it should show the user that this piece of information could be vital.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use a <command>Warning</command> admonition to alert the reader that the current setup will change or be altered, such as files being removed, and not to perform the operation unless fully aware of the consequences.
					</para>

				</listitem>

			</itemizedlist>

		</para>

	</section>

	<section id="making-recommendations">
	 <title>Making Recommendations</title>
		<para>
		When making a recommendation, the preferred verbiage is "Red&nbsp;Hat recommends..." instead of the common but indirect "It is recommended...".
		Recommendations can include best practices, recommended practices, and product-specific suggestions.
		See <xref linkend="avoiding-confusing-language"/> for information on using the terms "best practices" and "recommended practices" in Red&nbsp;Hat documentation.
	  </para>
		<example>
			<title>
				(incorrect)
			</title>
		<para>
	    "Although the attack surface is reduced to the same-project traffic, it is recommended to create multiple service accounts within a project."
	  </para>
	  <para>
		  "It is recommended to generate a service account for each microservice in your project."
	  </para>
	</example>
	<example>
		<title>
			(correct)
		</title>
	  <para>
		"Although the attack surface is reduced to the same-project traffic, Red&nbsp;Hat recommends creating multiple service accounts within a project."
	  </para>
	<para>
  	"Red&nbsp;Hat recommends that you generate a service account for each microservice in your project."
	</para>
</example>
 </section>

<!-- Describe at beginning of guide what it covers, but not to use markup. -->
	 <section id="citing-other-works">
		<title>Citing Other Works</title>
		 <formalpara id="other-books">
			<title>Referencing Other Books</title>
			 <para>
				When referencing another book, either internal or external to Red&nbsp;Hat, use the following format:
			</para>

		</formalpara>
		<!--  <para>
			In XML:
		</para> -->

<programlisting>
<!-- &lt;citetitle&gt;Book Title&lt;/citetitle&gt; by &lt;author&gt;&lt;firstname&gt;First name&lt;/firstname&gt;&lt;surname&gt;Surname&lt;/surname&gt;&lt;/author&gt;; Publisher. -->
Book Title by First name Surname; Publisher.
</programlisting>

		 <para>
			For example, <citetitle>Maximum RPM</citetitle> by
			<author>
				<firstname>Edward</firstname>
				 <surname>Bailey</surname>

			</author>
			; Red&nbsp;Hat Press.
		</para>
		 <formalpara id="other-websites">
			<title>Referencing Other Internet Sites</title>
			 <para>
				When referencing another internet site, use the following guidelines:
			</para>

		</formalpara>
		 <itemizedlist>
			<listitem>
				<para>
					Do not link words within the body text. That is, do not use structures such as "Go <ulink url="somewhere.com">here</ulink> for more information," where "here" is a link.
				</para>

			</listitem>
			 <listitem>
				<para>
					Short URLs, such as <ulink url="http://partner.redhat.com">http://partner.redhat.com</ulink>, are OK to use in body text at your discretion.
				</para>

			</listitem>
			 <listitem>
				<para>
					If the URL is excessively long or complex, create a link by using the title of the destination as a label, and put the actual URL in a footnote. For example: See the <ulink url="http://world-database-of-everything.com/en/classifcation_of_species/mammals.html"><citetitle>Classification of Species</citetitle></ulink><footnote> <para>
						http://world-database-of-everything.com/en/classifcation_of_species/mammals.html
					</para>
					 </footnote> page for more information.
				</para>

			</listitem>

		</itemizedlist>

	</section>

<!-- <section id="other-authors">
		<title>Citing Other Authors</title>
		 <para>
			DocBook provides the &lt;blockquote&gt; and &lt;attribution&gt; tags for this purpose, but how they should be rendered is currently being discussed. For example:
		</para>
		 <blockquote>
			<attribution>Thomas Jefferson</attribution> <para>
				Why use two words when one will do?
			</para>

		</blockquote>

	</section>
-->
</chapter>
