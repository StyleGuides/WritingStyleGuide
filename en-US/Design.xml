<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Conventions_for_Writers_and_Editors.ent">
%BOOK_ENTITIES;
]>
<chapter id="design">
	<title>Design</title>
	 <xi:include href="Book_Design.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	 <section id="heading-styles">
		<title>Heading Styles</title>
    <para>
      This section covers various aspects of heading styles and design.
      If your company or organization has specific requirements in this regard, follow those requirements first.
    </para>
		 <formalpara id="capitalization">
				<title>Capitalization</title>
					<para>
					The standard for technical documentation is title case for all headings and titles.
					<!-- The standard for all Red&nbsp;Hat technical documentation is title case for all headings and titles. -->
            Table titles and procedure titles fall into this category; standard title case capitalization rules apply.
					</para>
		</formalpara>
			<para>
			Use title case also when referring to the titles of other publications, even if the title on the publication itself uses different casing.
			</para>
			<para>
			The currently accepted reference for determining title case is at <ulink url="https://titlecase.com/titlecase">https://titlecase.com/titlecase</ulink>.
			</para>
			<para>
			Use sentence case for figure captions, legends, diagram labels, and table column headers.
            They are not classified as titles.
			</para>
					 <!-- <warning>
						<title>Marketing and Brand Capitalization Guide</title>
						 <para>
							The Red&nbsp;Hat Marketing and Brand groups and some other groups use sentence case for most titles and headings, with some exceptions, for example, when referencing an externally produced resource's title.
						</para>

					</warning> -->

      <formalpara>
        <title>Punctuation</title>

          <para>
            Be frugal with punctuation.
            Avoid semicolons, colons, dashes, and similar punctuation unless part of the actual subject, or a proper name.
            Do not use terminating periods.
            </para>
          </formalpara>
			<formalpara id="verbs-titles">
				<title>Writing Effective Titles</title>
					<para>
					Use a title that represents the content. 
					</para>
          </formalpara>
					<para>
					Typically, the "ing" form of a verb is a good way to title larger chunks of content such as chapters and sections, for example "Creating Branches". Choose a verb that refers to specific actions that users take, such as "Configuring", "Creating", "Installing", and "Merging".
					</para>
					<para>
					Activities and subtasks that the user should perform can alternatively use an imperative verb for clarity. Imperative verbs are prescriptive, such as "Create" or "Delete". Example: "Assess the Health of an OpenShift Cluster".
					</para>
					<para>
					In some cases, a verb might not be appropriate because the content is purely informational. Instead of using a vague verb like "Understanding", "Describing", "Introducing", or "Exploring", either use a more specific verb, or use a noun phrase instead of a verb. A noun phrase is descriptive and omits a verb, for example "OpenShift Operators" or "The OpenShift Web Console."
					</para>
					<para>
					Avoid a title that consists of only one word. 
					</para>
			 <table>
			<title></title>
			 <tgroup cols="2" colsep="1" rowsep="1">
				<colspec colname="c1"></colspec>
				 <colspec colname="c2"></colspec>
				 <thead>
					<row>
						<entry> Example </entry>
						 <entry> Improvement </entry>

					</row>

				</thead>
				 <tbody>
					<row>
						<entry> Understanding OpenShift Users and Groups </entry>
						 <entry> OpenShift Users and Groups </entry>

					</row>
					<row>
						<entry> Introducing Cluster Updates </entry>
						 <entry> Cluster Updates </entry>

					</row>					
					<row>
						<entry> MetalLB </entry>
						 <entry> The MetalLB Component </entry>

					</row>		

				</tbody>

			</tgroup>

		</table>
					<para>
					In training content, avoid using a verb such as "Discussing" or "Demonstrating" in objectives for students. Such verbs might refer instead to what the instructor or the course content covers, or to a student group activity in class.
					</para>
					 <important>
						<para>
							Gerunds should be avoided elsewhere.
              Refer to <xref linkend="sentence-structure" />.
						</para>
					</important>
      <formalpara>
        <title>File Names, Commands, and Related Terms</title>
          <para>
            When creating chapter and section titles, do not include file, command, or similar names, and generally do not include markup elements.
            Instead, focus on the task at hand and introduce the required file and command names in the text.
            Including such objects in titles is generally considered poor technical writing practice.
            Depending on how your documentation is built and delivered, including these object types can result in unpredictable results and can even cause failed builds.
          </para>
		</formalpara>

			 <table>
			<title></title>
			 <tgroup cols="2" colsep="1" rowsep="1">
				<colspec colname="c1"></colspec>
				 <colspec colname="c2"></colspec>
				 <thead>
					<row>
						<entry> Example </entry>
						 <entry> Improvement </entry>

					</row>

				</thead>
				 <tbody>
					<row>
						<entry> Custom Domains and cert-manager Operators with ROSA </entry>
						 <entry> Custom Domains and Certificate Management Operators with ROSA </entry>

					</row>

				</tbody>

			</tgroup>

		</table>

	</section>
	 <section id="documenting-fonts">
		<title>Documenting Fonts</title>
		 <para>
			The preferred way to refer to each type of PostScript font is "PostScript Type x", substituting "x" with either 1, 2, or 3, if the problem is specific to a particular type.
		</para>

	</section>
	 <section id="documenting-ui">
		<title>Documenting the User Interface</title>
		 <para>
			For initial guidance in all cases, refer to <ulink url="https://www.ibm.com/docs/en/ibm-style?topic=elements-ui"><citetitle>UI Elements</citetitle></ulink> in <citetitle>IBM Style</citetitle>
         	<guiicon><inlinemediaobject>
            <imageobject>
              <imagedata fileref="images/padlock.png"/>
            </imageobject>
          </inlinemediaobject></guiicon>.
      The following sections highlight exceptions or cases that might otherwise cause confusion.
		</para>
		 <para>
			When writing about items in a user interface (UI), match the capitalization and spelling of those items from the interface.
			However, if the interface contains a spelling error, then correct the spelling in your writing, and get the interface corrected if possible.
			Depending on the context, an option might be to write around an incorrectly spelled interface item rather than naming it specifically.
		</para>
		 <section id="gui-elements-punctuation">
			<title>User Interface Elements and Punctuation</title>
			 <para>
				When describing UI elements, do not include punctuation that appears on those elements, unless omission of that punctuation might lead to confusion.
			</para>
			 <para>
				For example, for a button labeled <guibutton>Save As...</guibutton>, do not include the ellipsis in the documentation.
			</para>
      <para>
        Avoid including the element type in instructions.
        For example, rather than "Click the <guibutton>Save</guibutton> button", write "Click <guibutton>Save</guibutton>".
      </para>
      <para>
        In some cases it is preferred practice to include the object type for the sake of clarity.
        Consider the following example:
      </para>
      <!-- <example><title>Preferred Style for Documenting Symbols and Other Special Characters</title>
        <para>
          Click the <guibutton>+</guibutton> sign.
        </para>
        <para>
          Click the <guibutton>^</guibutton> symbol.
        </para>
      </example> -->
      <example><title>Preferred Style for Documenting Icons</title>
        <para>
          Click the <guiicon>Upload</guiicon> (<guiicon><inlinemediaobject>
            <imageobject>
              <imagedata fileref="images/reload.png"/>
            </imageobject>
          </inlinemediaobject></guiicon>) icon to upload the files to the server.
        </para>
      </example>
			 <para>
			 For more information, refer to <ulink url="https://www.ibm.com/docs/en/ibm-style?topic=elements-ui"><citetitle>UI Elements</citetitle></ulink> in <citetitle>IBM Style</citetitle>
         	<guiicon><inlinemediaobject>
            <imageobject>
              <imagedata fileref="images/padlock.png"/>
            </imageobject>
          </inlinemediaobject></guiicon>.
			</para>
			<section>
			 <title>Moving Through Multiple UI Options</title>
				 <para>
					 Use "go to" when moving through multiple UI options because it covers all cases where you might have to click, point to, press, select, or otherwise make a series of selections to start an action.
				 </para>
				 <para>
					 For example, "From the OpenShift web console, go to Monitoring â†’ Metrics and enter the following metrics as queries."
				 </para>

		 </section>
		</section>
		<section id="figures-illustrations">
			<title>Figures, Illustrations, and Screenshots</title>
			<para>
				For general advice about using figures, illustrations, and screenshots, refer to <ulink url="https://www.ibm.com/docs/en/ibm-style?topic=format-figures"><citetitle>Figures</citetitle></ulink> in <citetitle>IBM Style</citetitle>
         	<guiicon><inlinemediaobject>
            <imageobject>
              <imagedata fileref="images/padlock.png"/>
            </imageobject>
          </inlinemediaobject></guiicon>.
			</para>
			<para>
				The following specific conventions apply to using captions and callouts with figures in Red&nbsp;Hat technical documentation, and are generally recommended.
			</para>
			<itemizedlist>
				<listitem>
					<para>
						If the image is well documented and described in the surrounding text, no caption or callouts are required.
					</para>
				</listitem>
				<listitem>
					<para>
						If the image is not fully described in the surrounding text, use a caption or legend to complete the information for the reader.
					</para>
				</listitem>
				<listitem>
					<para>
						If the image is complex and requires detailed explanation, consider using callouts to describe each of the relevant parts.
					</para>
				</listitem>
			</itemizedlist>
			<note>
				<para>
					Do not use callouts and captions on the same figure.
				</para>
			</note>
			</section>
		 <section id="starting-apps">
			<title>Starting Applications from the Desktop</title>
			 <para>
			 	This section describes how to start applications from a Red&nbsp;Hat Enterprise&nbsp;Linux-based distribution.
			</para>
			 <para>
				RHEL&nbsp;8 uses the following approach to starting applications from the desktop.
				To maintain consistency and to make translation easier, Red&nbsp;Hat documentation assumes the use of GNOME Classic, the default user interface, and prefers a consistent approach to instructing customers how to start applications.
			</para>
			 <para>
				The preferred approach is to use the <keycap>Super</keycap> key to enter the Activities Overview, to enter the name of the required application, and to press <keycap>Enter</keycap>.
				The <keycap>Super</keycap> key appears in various guises, depending on the keyboard and other hardware, but often as either the <keysym>Windows</keysym> or <keysym>Command</keysym> key, and typically to the left of the <keycap>Spacebar</keycap>. For example:
			</para>
			 <example id="exam-starting-apps">
				<title>Preferred Approach to Starting Applications from the Desktop</title>
				 <para>
					To start gedit, press the <keycap>Super</keycap> key to enter the Activities Overview, type <literal>gedit</literal>, and then press <keycap>Enter</keycap>.
				</para>

			</example>

		</section>
		 <section id="documenting-command-syntax">
			<title>Documenting Command Terminology and Syntax</title>
      <para>
        Sufficient variation exists in the terminology that is used to describe commands, options, arguments, and so on that only general advice is provided here.
      </para>
      <para>
        When referring to the command line as specified by Bash and POSIX, follow the terminology that the software uses.
        Never use "flag" when referring to command-line options in POSIX, even though Microsoft often uses the term "flag" when referring to single-character options in Microsoft Windows.
      </para>
      <para>
        The following extract from <command>info libc</command> is of particular interest here:
      </para>
      <blockquote>
        <para>
          "POSIX recommends these conventions for command line arguments. [...] Arguments are options if they begin with a hyphen delimiter ('-'). Multiple options may follow a hyphen delimiter in a single token if the options do not take arguments. Thus, '-abc' is equivalent to '-a -b -c'. [...] Certain options require an argument. For example, the '-o' option of the 'ld' command requires an argumentâ€”an output file name". and so on.
        </para>
        <para>
          Refer to <command>info libc argument syntax</command> for the full discussion.
        </para>
        </blockquote>
      <para>
        For further guidance, refer to <command>info bash</command>, and to <ulink url="https://www.ibm.com/docs/en/ibm-style?topic=technical-elements"><citetitle>Technical Elements</citetitle></ulink> in <citetitle>IBM Style</citetitle>
         	<guiicon><inlinemediaobject>
            <imageobject>
              <imagedata fileref="images/padlock.png"/>
            </imageobject>
          </inlinemediaobject></guiicon>.
      </para>
			 <para>
        The following examples are intended to highlight correct usage.
			</para>
			 <example id="exam-documenting-command-syntax">
				<title>Cloning a Git Repository</title>
				 <para>

<screen>$ git clone <replaceable>[username@]hostname:/repository_filename [directory]</replaceable></screen>

				</para>

			</example>
			 <para>
				In <xref linkend="exam-documenting-command-syntax" />, the entire command consists of the following components:
			</para>
			 <variablelist>
				<varlistentry id="command-syntax-prompt">
					<term>The prompt (<prompt>$</prompt>)</term>
					 <listitem>
						<para>
							Indicates that a normal user can run the command, as compared to the <systemitem>root</systemitem> user, which would be indicated by the number sign (<prompt>#</prompt>).
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="command-git-clone">
					<term>The command (<command>git clone</command>)</term>
					 <listitem>
						<para>
							The actual command to run, without any optional or replaceable values.
              It must be typed as-is.
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="source-options">
					<term>Source options <replaceable>[username@]hostname:/repository_filename</replaceable>)</term>
					 <listitem>
						<para>
							The optional username, indicated by brackets, [], followed by the hostname and path to the repository.
              All aspects of this component must be replaced with valid values.
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="target-options">
					<term>Target options <replaceable>[directory]</replaceable></term>
					 <listitem>
						<para>
							The optional directory into which the repository is cloned.
              It must be replaced with a valid value, or be omitted.
						</para>

					</listitem>

				</varlistentry>

			</variablelist>
			 <example id="exam-secure-copy">
				<title>Securely Copying a File Between Hosts</title>

<screen>$ scp <replaceable>filename [username@]hostname:/directory</replaceable></screen>

<!-- Pruned redundant repeated information from the previous section. -->
			</example>
			 <para>
				In <xref linkend="exam-secure-copy" />, the entire command consists of the following components:
			</para>
			 <variablelist>
				<varlistentry id="command-prompt">
					<term>The command prompt (<prompt>$</prompt>)</term>
				<listitem>
						<para>
							<!-- Indicates that a normal user can run the command, as compared to the <systemitem>root</systemitem> user, which is indicated by the number sign (<prompt>#</prompt>). -->
						</para>

					</listitem>

          </varlistentry>
				 <varlistentry id="command-scp">
					<term>The command (<command>scp</command>)</term>
				<listitem>
						<para>
							<!-- The actual command to run, without any optional or replaceable values. It must be typed as-is. -->
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry id="command-syntax-source-filename">
					<term>Source options (<replaceable>filename</replaceable>)</term>
					 <listitem>
						<para>
							The file name to copy. It must be replaced with a valid value.
						</para>

					</listitem>

				</varlistentry>
				 <varlistentry>
					<term>Target options (<replaceable>[username@]hostname:/directory</replaceable>)</term>
					 <listitem>
						<para>
							The optional username, indicated by brackets, [], followed by the hostname and path to the target directory.
              All aspects of this component must be replaced with valid values.
						</para>

					</listitem>

				</varlistentry>

			</variablelist>
			 <warning>
				<para>
					Avoid using the <option>--force (-f)</option> and <option>--assumeyes (-y)</option> options on most commands, especially when logged in as the <systemitem>root</systemitem> user. This can lead to unintended consequences, such as removing files or directories by mistake or installing packages or other software that might not suit your system. Refer to the following examples:
				</para>

<screen>[root@serverc pam.d]# rm -f system-auth password-auth
[root@serverc ~]# yum install -y new-package
</screen>
<para>
  In these examples, omit the <option>-f</option> and <option>-y</option> options, respectively.
</para>
				 <para>
					In some cases, such as in Ansible Playbooks or other automation scripts, it might be necessary to use these options.
				</para>

			</warning>
			 <section id="continuation">
				<title>Documenting Multiple or Long Commands</title>
          <note>
            <para>
              The following guidance differs from previous guidance on the subject.
            </para>
          </note>
				 <para>
					Sometimes you need to show how to use long commands that extend over two or more lines, or that include several commands in a single example.
          If the commands are relatively short and straightforward, then include the commands on consecutive lines.
				</para>
				 <example>
					<title>Documenting Multiple Commands</title>

<screen>$ cd Documents
$ vi myFile.txt
</screen>

				</example>
			<para>
			  If the commands are long, complex, or wrap over multiple lines, then use the following design:
<!-- 			If the commands are long, complex, or wrap over multiple lines, then the following design options are available. -->
          </para>
          <itemizedlist>
<!--             <listitem>
              <para>
                Use line continuation characters and the associated PS2 prompts.
                If you are documenting commands on a different operating system, then update the prompts and line continuation characters to suit.
              </para>
            </listitem>
            <listitem>
              <para>
                Use neither line continuation characters nor the associated PS2 prompts.
              </para>
            </listitem> -->
			<listitem>
              <para>
                Use line continuation characters without the associated PS2 prompts.
              </para>
            </listitem>
			<listitem>
              <para>
                On Linux and macOS operating systems, use the Linux shell continuation character (\).
              </para>
            </listitem>
			<listitem>
              <para>
                On Windows operating systems, use the backtick character (`).
              </para>	
            </listitem>
			<listitem>
              <para>
                For content that is potentially used in multiple operating systems, use the Linux shell continuation character, and include an explanatory sentence before the command.
              </para>						  		  			  
            </listitem>
          </itemizedlist>
<!--          <important>
            <para>
              Do not mix these styles.
              Use the same style throughout your document, publication, and product set.
            </para>
          </important> -->
          <para>
            You can also indent the second and subsequent lines of such commands to assist in clarity and readability if required.
<!--            You can use this option for any of these designs. -->
          </para>

<example><title>Long Command Example</title>
  <para>
    If the <systemitem>memory</systemitem> machine pool does not exist, then create it.
  </para>  
  <para>
    On a Microsoft Windows system, replace the line continuation character (\) in the following long command with the backtick character (`), which is the line continuation character in PowerShell.
  </para>
<screen>$ <userinput>aws iam create-policy --policy-name RosaCloudWatch \ </userinput>
<userinput>  --policy-document file://policy.json --query Policy.Arn --output text</userinput>
arn:aws:iam::452954386616:policy/RosaCloudWatch
</screen>
  <para>
The ARN in the preceding output is different on your system.
  </para>
</example>

	</section>

			 <section id="omitting">
				<title>Omitting Part of Output</title>
          <para>
            For the sake of brevity, do not show all output to the user in all cases, but only those parts of any output that are relevant to the context that is described. 
			Where output is not included, place a marker to show that information is purposely excluded.
			When shortening the output, use a consistent notation.
			For omitting entire horizontal lines of output, Red&nbsp;Hat uses the <emphasis>...output&nbsp;omitted...</emphasis> notation, starting and ending with an ellipsis, and highlighted in italics.
          </para>

<example><title>Notation for Omitting Horizontal Output</title>
<screen>[student@workstation image]$ podman build --layers=false -t nexus .
STEP 1: FROM ubi8/ubi:8.3
Getting image source signatures
<emphasis>...output omitted...</emphasis>
STEP 14: COMMIT <emphasis>...output omitted...</emphasis> localhost/nexus:latest</screen>

</example>

          <para>
			For omitting vertical columns of output, omitting partial lines of output, or to shorten long strings in output, Red&nbsp;Hat uses the ellipsis notation (...).
          </para>

<example><title>Notation for Omitting Vertical Output</title>
               <screen>[user@host ~]$ <userinput>oc get csv</userinput>
NAME                                    DISPLAY                        ...
barbican-operator.v1.0.0                Barbican Operator              ...
cinder-operator.v1.0.0                  Cinder Operator                ...
designate-operator.v1.0.0               Designate Operator             ...
glance-operator.v1.0.0                  Glance Operator                ...
heat-operator.v1.0.0                    Heat Operator                  ...
horizon-operator.v1.0.0                 Horizon Operator               ...
<emphasis>...output omitted...</emphasis></screen>
<!-- infra-operator.v1.0.0                   OpenStack Infra                ...
ironic-operator.v1.0.0                  Ironic Operator                ...
keystone-operator.v1.0.0                Keystone Operator              ...
manila-operator.v1.0.0                  Manila Operator                ...
mariadb-operator.v1.0.0                 MariaDB Operator               ...
metallb-operator.v4.14.0-202407091409   MetalLB Operator               ...
neutron-operator.v1.0.0                 Neutron Operator               ...
nova-operator.v1.0.0                    Nova Operator                  ...
octavia-operator.v1.0.0                 Octavia Operator               ...
openstack-ansibleee-operator.v1.0.0     OpenStackAnsibleEE             ...
openstack-baremetal-operator.v1.0.0     OpenStack Baremetal Operator   ...
openstack-operator.v1.0.0               OpenStack                      ...
ovn-operator.v1.0.0                     OVN Operator                   ...
placement-operator.v1.0.0               Placement Operator             ...
rabbitmq-cluster-operator.v0.0.1        RabbitMQ Cluster Operator      ...
swift-operator.v1.0.0                   Swift operator                 ...
telemetry-operator.v1.0.0               Telemetry Operator             ... -->
</example>

	</section>

      <section id="replaceable-paths">
        <title>Referring to Replaceable Paths</title>
          <para>
            To refer to a path that users need to replace with something that is specific to their system, use the appropriate markup for your content, the correct syntax for the system and object in question, and an indicative name.
            Use a leading slash if the absolute path is required.
          </para>
          <example><title>Referring to Replaceable Paths on Linux Systems</title>
            <para>
              "Mount the ISO file in <replaceable>/path/to/iso/file</replaceable>."
            </para>
          </example>
          <para>
            Remember to use the appropriate syntax for the system that you are documenting or describing.
          </para>
          <example><title>Referring to Replaceable Paths on Microsoft Windows Systems</title>

          <para>
            "Mount the ISO file in <replaceable>C:\path\to\iso\file</replaceable>."
          </para>
          </example>
          <para>
            If you are referring to a different object class or type with different delimiters, use the appropriate delimiters.
            For example:
          </para>
          <para>
            A PATH variable for Bash might appear as <replaceable>/usr/bin:/usr/local/bin</replaceable>.
          </para>
          <para>
            A package path in Lua might appear as <replaceable>local.share.lua</replaceable>.
          </para>
        </section>

		</section>
    <section><title>Using Escalated Privileges Correctly</title>

      <para>
        The term <firstterm>escalated privileges</firstterm> refers to changing to a user whose privileges allow operations that a normal user cannot access.
        It also refers to temporarily changing the privileges of the current user to perfom those operations without changing user accounts.
      </para>
      <note>
        <para>
          This section is aimed primarily at Red&nbsp;Hat Training course material, but the principles and guidelines apply equally in any environment.
        </para>
      </note>
      <note><title>Classroom Exceptions</title>
        <para>
          Although security is important, it is more important that classroom security does not unnecessarily distract from the immediate topic that is being taught.
        </para>
      </note>
      <section><title>General Recommendations</title>
          <para>
            The following are <emphasis>recommendations</emphasis>, not rules.
            As in most matters, consistency is important.
            Do not swap between different approaches without reason.
            Choose which approach works best for your situation and use it consistently.
          </para>
        <itemizedlist>
          <listitem>
            <para>
              In all cases, use the minimum required privilege level to achieve the task.
            </para>
          </listitem>
          <listitem>
            <para>
              Use a consistent approach when giving instructions to change users.
              For example: "Connect to the cluster node and become the <systemitem>root</systemitem> user."
            </para>
            <para>
              Variations such as "become <systemitem>root</systemitem>" or similar are strongly discouraged.
            </para>
          </listitem>
          <listitem>
            <para>
              Use <command>sudo</command> and <command>sudo -i</command> and set it up to work throughout all relevant systems.
              Do not use <command>su -</command> without good cause.
            </para>
          </listitem>
          <listitem>
            <para>
              When a scattered minority of privileged commands occur in a mostly unprivileged exercise, use <command>sudo</command> on a per-command basis.
            </para>
          </listitem>
          <listitem>
            <para>
              When the exercise is majority privileged, or has many privileged commands, use <command>sudo -i</command>, either at the beginning of the exercise, or at an appropriate step where the privileged commands begin.
            </para>
          </listitem>
          <listitem>
            <para>
              In the narrative, do not show the use of <command>su</command> or <command>sudo</command>, but always show privileged commands with the correct prompt.
              Refer to <xref linkend="exam-documenting-command-syntax"/> for information about command prompts.
            </para>
          </listitem>
        </itemizedlist>

      <note>
        <para>
          Some courses are specifically designed to teach <command>sudo</command> and its variations, the use of the related files, such as <filename>/etc/sudoers</filename>, and so on.
          For these courses, use the required variation for the topic that is being taught.
        </para>
      </note>
      </section>
      <section><title>Ansible Courses</title>
        <itemizedlist>
          <listitem>
            <para>
              Ansible courses typically use a <systemitem>devops</systemitem> user with passwordless sudo access (<code>devops	ALL=(ALL)	NOPASSWD: ALL</code>) on managed nodes to enable the use of <command>become</command> without a <command>become</command> password as <systemitem>root</systemitem> to do anything.
            </para>
          </listitem>
          <listitem>
            <para>
              As much as possible, configure the default setting for <varname>become</varname> to <code>false</code>.
			  If a single task needs privileges, then set <varname>become: true</varname> on that task.
            </para>
          </listitem>
          <listitem>
            <para>
              If most tasks in a play require escalated privileges, then set the entire play to <varname>become: true</varname> and selectively set individual tasks that do not need escalated privileges to <varname>become: false</varname>.
            </para>
          </listitem>
        </itemizedlist>
        </section>
<!--       </section> -->


    </section>

		 <section id="view-edit-files">
			<title>Describing How to View and Edit Files</title>
			 <para>
				To describe how to view and edit files, such as configuration files, scripts, and so on, do not include editor names as part of the guidance, unless the topic is about a specific editor, or is otherwise necessary to achieve a wanted result.
			</para>
			 <para>
				For example, do not refer to <command>cat</command> or <command>vi</command> if you need to tell readers to "view the <filename>my-script</filename> file".
				If you need to tell readers to edit a file and add or remove content, write "Edit the <filename>my-script</filename> file and add the following content:" and then include the required content in a code block and highlight the text to change.
				Include some surrounding text in the file for context.
				Do not use line numbers as a reference point because they can change.
			</para>
			 <para>
				If the file to edit is empty or does not exist, do not highlight any content to add.
			</para>
			 <para>
				You can also use <systemitem>here</systemitem> documents to describe how to create a file with required content. 
				For more information about <systemitem>here</systemitem> documents, refer to <ulink url="https://tldp.org/LDP/abs/html/here-docs.html" />
				The syntax of <systemitem>here</systemitem> documents varies by system, shell, language, and so on. The following example creates the <filename>my-script</filename> file in the current directory, with the example content.
			</para>

<screen><![CDATA[$ cat << EOF > my-script
> # The first line of text
> # The second line
> # Start adding variables after this line
> EOF]]></screen>
			 <para>
				In some cases, it is necessary to indicate which tool to use to view a file, especially for log files and other long files. In these cases, suggest a viewer based on the operating system or environment in which you are working, such as <command>tail</command>, <command>head</command>, <command>less</command>, or <command>journalctl</command>.
			</para>

		</section>
		
		 <section id="use-hostnames-correctly">
			<title>Using Host and Usernames Correctly</title>
			 <para>
				Many examples in Red&nbsp;Hat documentation require the use of usernames, hostnames, IP addresses, and similar information.
        To reduce security risks, to minimize translation overhead, and to maintain consistency, Red&nbsp;Hat recommends the following approach:
			</para>
			 <note>
				<para>
					All names are lowercase. Do not use white space in any part of the name.
				</para>

			</note>
			 <itemizedlist>
				<listitem>
					<para>
						Use <ulink url="http://tools.ietf.org/search/rfc2606">RFC 2606</ulink> to find suitable domain names.
            For documentation and example purposes, it is typically <systemitem>example.com</systemitem>, <systemitem>example.net</systemitem>, <systemitem>example.org</systemitem>, and <systemitem>example.edu</systemitem>.
					</para>
					 <important>
						<para>
							Do not use valid, public IP addresses in any examples.
						</para>

					</important>

				</listitem>
				 <listitem>
					<para>
						As much as possible, use <systemitem>user</systemitem>, <systemitem>username</systemitem>, <systemitem>root</systemitem>, <systemitem>admin</systemitem>, or similar names to identify classes of users.
					</para>
					 <para>
						Use these generic names when you refer to users outside a case study. It helps students to identify which part of a command to replace, by establishing a consistent format for names of users and system items. For example:
					</para>

<screen><prompt>[root@fedora ~]# </prompt><userinput>setfacl -m u:user1:rw /project/file1</userinput></screen>
					 <para>
						The following list provides further options:
					</para>
					 <itemizedlist>
						<listitem>
							<para>
								<systemitem>operator1</systemitem> to <systemitem>operator9</systemitem>
							</para>

						</listitem>
						 <listitem>
							<para>
								<systemitem>developer1</systemitem> to <systemitem>developer9</systemitem>
							</para>

						</listitem>
						 <listitem>
							<para>
								<systemitem>architect1</systemitem> to <systemitem>architect9</systemitem>
							</para>

						</listitem>

					</itemizedlist>

				</listitem>

			</itemizedlist>
			 <section id="using-extended-names">
				<title>Using Extended User and Group Names</title>
				 <para>
					Sometimes, the recommended list of user and group names is too restrictive for the scope of a publication or article. In such cases, the following extended model is acceptable.
				</para>
				 <formalpara id="using-realistic-names">
					<title>Using Realistic Usernames</title>
					 <para>
						When you are writing a detailed case study, such as training exercises, reviews, and similar material, use realistic names. These names should not be real people. In other words, do not use the name of an employee, a well-known person, or your neighbor.
					</para>

				</formalpara>
				 <para>
					For example, you are the system administrator at Global Banking and you are asked to set up permissions to the accounting directory for the following users: Huong Sabo, Jolene Paluch, Abby Quincy, Francis Ritcher, and Jaya Lamont. 
					Huong is a department manager and needs read access to the accounting directory. Jolene is the lead accountant and needs both read and write access.
				</para>
				 <formalpara id="choosing-realistic-names">
					<title>Choosing a Realistic Name</title>
					 <para>
						Consider the following points when choosing a realistic name: 
					</para>

				</formalpara>
				 <itemizedlist>
					<listitem>
						<para>
							In examples or scenarios, you can use a person's name and then use a gender-specific pronoun to refer to that name. Vary the use of proper names in documentation. Use names that represent various ethnic backgrounds, genders, and locations.
						</para>

					</listitem>
					 <listitem>
						<para>
							Include a diverse set of names in your examples to reflect the diversity of the real world.
              For example, use gender-inclusive and culturally diverse names that suggest various backgrounds in examples to avoid implying that only certain groups have specific skills.
						</para>

					</listitem>
					 <listitem>
						<para>
							Do not use copyrighted fictional characters in examples, and do not use real people.
						</para>

					</listitem>

					 <listitem>
						<para>
							When choosing names, also consider how those names might appear in email addresses, usernames, and similar contexts.
							Avoid name combinations or abbreviations that result in unintended meanings, such as slang.
							An example that works well might be "John Smith", with an email address of <email>jsmith@example.com</email>.
							However, for the name "Brian Strong", a corresponding email address of <email>bstrong@example.com</email> might not work so well (when read out, it sounds like "be strong").
							Consider also any implications for names in different languages. 
						</para>
						<para>
							Refer also to the 
							<ulink url="https://developers.google.com/style"><citetitle>Google Developer Documentation Style Guide</citetitle></ulink>.
						</para>

					</listitem>

				</itemizedlist>
				 <formalpara id="sourcing-realistic-names">
					<title>Sourcing Realistic Names</title>
					 <para>
						You can use any of the following name generators to create realistic names for users:
					</para>

				</formalpara>
				 <itemizedlist>
					 <listitem>
						<para>
							<ulink url="http://listofrandomnames.com/">http://listofrandomnames.com/</ulink>
						</para>

					</listitem>
					 <listitem>
						<para>
							<ulink url="http://www.behindthename.com/random/">http://www.behindthename.com/random/</ulink>
						</para>

					</listitem>
					 <listitem>
						<para>
							<ulink url="http://random-name-generator.info/">http://random-name-generator.info/</ulink>
						</para>

					</listitem>

				</itemizedlist>
				 <formalpara id="using-extended-group-names">
					<title>Group Names</title>
					 <para>
						Use any lowercase name that is a logical extension of the accepted usernames, without the numerical suffix. For example, <systemitem>architects</systemitem>, <systemitem>developers</systemitem>, <systemitem>operators</systemitem>.
					</para>

				</formalpara>

			</section>

		</section>

	 	<section id="refer-object-names">
			<title>Referring to Object Names</title>
			 <para>
				When using object names, write a sentence so that it is complete without the object name.
			</para>

			 <table>
			<title></title>
			 <tgroup cols="2" colsep="1" rowsep="1">
				<colspec colname="c1"></colspec>
				 <colspec colname="c2"></colspec>
				 <thead>
					<row>
						<entry> Example </entry>
						 <entry> Improvement </entry>

					</row>

				</thead>
				 <tbody>
					<row>
						<entry> Find the current default <systemitem>StorageClass</systemitem>. </entry>
						 <entry>
						 <para>
						 Either: Find the current default storage class.
						 </para>
						 <para>
						 Or: Find the current default <systemitem>StorageClass</systemitem> value.
						 </para>
						</entry>

					</row>

				</tbody>

			</tgroup>

		</table>
			 <para>
				Avoid starting or ending a sentence with an object name.
			</para>

			 <table>
			<title></title>
			 <tgroup cols="2" colsep="1" rowsep="1">
				<colspec colname="c1"></colspec>
				 <colspec colname="c2"></colspec>
				 <thead>
					<row>
						<entry> Example </entry>
						 <entry> Improvement </entry>

					</row>

				</thead>
				 <tbody>
					<row>
						<entry> <systemitem>Umount /mnt/save</systemitem>. </entry>
						 <entry> Unmount the <filename>/mnt/save</filename> directory. </entry>

					</row>
					<row>
						<entry> Modify the <filename>/etc/resolv.conf</filename> file to use this <systemitem>nameserver</systemitem>. </entry>
						 <entry> Modify the <filename>/etc/resolv.conf</filename> file to use this name server. </entry>

					</row>

				</tbody>

			</tgroup>

		</table>
			 <para>
				In most cases, place an object name before the noun that it modifies rather than after the noun.
			</para>

			 <table>
			<title></title>
			 <tgroup cols="2" colsep="1" rowsep="1">
				<colspec colname="c1"></colspec>
				 <colspec colname="c2"></colspec>
				 <thead>
					<row>
						<entry> Example </entry>
						 <entry> Improvement </entry>

					</row>

				</thead>
				 <tbody>
					<row>
						<entry> Enable the default module stream for the module <systemitem>python36</systemitem> and install all packages from that stream. </entry>
						 <entry> Enable the default module stream for the <systemitem>python36</systemitem> module and install all packages from that stream. </entry>

					</row>

				</tbody>

			</tgroup>

		</table>
			 <para>
				However, in some cases, the sentence might be easier to understand if the noun appears first, or if additional language separates the object name from the noun. 
				For example, if the noun refers to a password, a value, or a status, then consider stating the noun first, or including explanatory language between the object name and the noun, or doing both.
				In other cases, a noun might be omitted.
			</para>

			 <table>
			<title></title>
			 <tgroup cols="2" colsep="1" rowsep="1">
				<colspec colname="c1"></colspec>
				 <colspec colname="c2"></colspec>
				 <thead>
					<row>
						<entry> Example </entry>
						 <entry> Improvement </entry>

					</row>

				</thead>
				 <tbody>
					<row>
						<entry> Log in as the <systemitem>admin</systemitem> user with the <systemitem>redhat</systemitem> password. </entry>
						 <entry> Log in as the <systemitem>admin</systemitem> user with <systemitem>redhat</systemitem> as the password. </entry>

					</row>
					<row>
						<entry> Define the <varname>backup_tmp</varname> variable with the <varname>/tmp</varname> value in the <filename>defaults/main.yml</filename> file. </entry>
						 <entry> Define the <varname>backup_tmp</varname> variable with a value of <varname>/tmp</varname> in the <filename>defaults/main.yml</filename> file. </entry>

					</row>
					<row>
						<entry> The <varname>is:clear</varname> key is set to the <varname>false</varname> value. </entry>
						 <entry> The <varname>is:clear</varname> key is set to <varname>false</varname>. </entry>

					</row>

				</tbody>

			</tgroup>

		</table>

		</section>

	</section>
	 <section id="document-currencies">
		<title>Documenting Currencies</title>
		 <para>
			Use local currency symbols wherever possible. If symbol clash occurs (USD versus AUD, for example), disambiguate with the 2-character country code. For example, US$, AU$.
		</para>
		 <important>
			<para>
				Do not provide currency conversions.
			</para>

		</important>

	</section>
	 <section id="using-abbreviations">
		<title>Abbreviations, Acronyms, Initialisms, and Special Characters</title>
		 <para>
			This section defines abbreviations, acronyms, initialisms, and special characters.
		</para>
		 <formalpara id="abbreviations">
			<title>Abbreviations</title>
			 <para>
				An abbreviation is a shortened form of a word or phrase. For example, <abbrev>Pty.</abbrev> and <abbrev>Inc.</abbrev> are abbreviations for "proprietary" and "incorporated", respectively. Read them as the word for which they are an abbreviation.
			</para>

		</formalpara>
		 <formalpara id="acronyms">
			<title>Acronyms</title>
			 <para>
        		An acronym is a word that is formed from the initial letters of a name, such as ROM for <emphasis>R</emphasis>ead-<emphasis>O</emphasis>nly <emphasis>M</emphasis>emory, or by combining initial letters or part of a series of words, such as LILO for <emphasis>LI</emphasis>nux <emphasis>LO</emphasis>ader.
        		<acronym>COBOL</acronym> is the acronym for Common Business-oriented Language, and <acronym>POP</acronym> is the acronym for Post Office Protocol.
			</para>

		</formalpara>
		 <formalpara id="initialisms">
			<title>Initialisms</title>
			 <para>
        		An initialism is an abbreviation that consists of the first letters of words in a phrase, syllables, or some combination thereof. Each character is pronounced separately. For example, FTP is an initialism for File Transfer Protocol.
			</para>
		</formalpara>

		 <formalpara id="special-chars">
			<title>Special Characters</title>
			 <para>
        		For the purposes of this guide, special characters refer to those characters that are listed in <xref linkend="punc-names" />.
				This section addresses how to use special characters as part of a file or directory name, such as "the <filename>.bashrc</filename> file" and "the <filename>_build/</filename> directory".
			</para>
		</formalpara>

	 <section id="abbreviations-correctly">
		<title>Using Abbreviations, Acronyms, Initialisms, and Special Characters Correctly</title>
		 <para>
			This section describes how to use abbreviations, acronyms, initialisms, and special characters correctly in Red&nbsp;Hat documentation.
		</para>

		 <formalpara id="first-mentions">
			<title>First Mentions</title>
		 <para>
			Spell out most acronyms and initialisms before using them in text, such as "The Embedded DevKit (EDK) ...".
           	Unless required for the audience or the topic, do not spell out well-known initialisms, such as HTML.
		</para>
		</formalpara>

		 <formalpara id="cap">
			<title>Capitalization</title>
		 <para>
         	Unless the acronym or initialism stands for a proper noun, use sentence case for the spelled out version: for example, "central processing unit (CPU)".
			Not all acronyms are capitalized (for example, "spool"); refer to 
			<ulink url="https://www.ibm.com/docs/en/ibm-style?topic=grammar-capitalization"><citetitle>Capitalization</citetitle></ulink> in <citetitle>IBM Style</citetitle>
         	<guiicon><inlinemediaobject>
            <imageobject>
              <imagedata fileref="images/padlock.png"/>
            </imageobject>
          </inlinemediaobject></guiicon> or to another suitable reference if you are unsure.
		</para>
		</formalpara>

		 <formalpara id="articles">
			<title>Articles</title>
		 <para>
			When deciding which articles to use, consider pronunciation. 
			For example, use "an <abbrev>RTS</abbrev> (real-time strategy)", because <abbrev>RTS</abbrev> is an initialism and you pronounce the first character as an "R" (Ã¤r). Conversely, use "a <acronym>RAM</acronym> upgrade", because <acronym>RAM</acronym> is an acronym and you pronounce it as a word (rÄƒm).
		</para>
		</formalpara>

		 <formalpara id="plurals">
			<title>Plurals</title>
		 <para>
			To form the plural of an acronym, add a trailing, lowercase "s" or "es" without an apostrophe, for example, ROMs, PINs, BIOSes.
		</para>
		</formalpara>

		<formalpara id="possess-abbr">
			<title>Possessives</title>
		 <para>
			Do not use possessives with abbreviations. For examples and more information, refer to <xref linkend="possessives"/>.
		</para>
		</formalpara>


		 <formalpara id="special-characters">
			<title>Special Characters</title>
	 	 <para>
			Consider pronunciation when referring to file or directory names that begin with special characters, and use the correct indefinite article.
		</para>

		</formalpara>
		 <para>
			If a file or directory name begins with a special character, such as an underscore, then you need to pronounce that character.
		</para>

		 <para>
			For example, using "an <filename>_build/</filename> directory" is correct, because you pronounce "an underscore build directory".
		</para>

		 <para>
			Using "a <filename>-compile/</filename> directory" is correct, because you pronounce "a dash compile directory".
		</para>
		</section>

	</section>
	 <section id="product-names">
		<title>Using Company, Product, and Brand Names Correctly</title>
		 <para>
			Various restrictions apply to using company, product, and brand names in Red&nbsp;Hat documentation. Refer to internal sources for further conditions that might apply to your own products.
		</para>
		 <note>
			<para>
				In the following sections, "first use" refers to the first use of a name in body text. Titles, banners, and similar objects are not classified as "first use".
			</para>

		</note>
<!-- <itemizedlist>
		<listitem>		-->
				<para>
					Restrictions apply to abbreviating Red&nbsp;Hat product or solution names in public-facing documents. Always use the full name on first use. For some products, for example Red&nbsp;Hat OpenShift Container Platform, you can omit "Red&nbsp;Hat" after the first use.
				</para>

<!-- 		<listitem>
			 </listitem>		-->
				<para>
					Further restrictions apply to using acronyms and initialisms. In this same example, and only in technical documentation, "RHOCP" is acceptable after the first use of the full product name.
				</para>

<!-- 		<listitem>
			 </listitem>		-->
				<para>
					Do not include "Inc." when referring to Red&nbsp;Hat except in legal documents.
				</para>

<!-- 		<listitem>
			 </listitem>		-->
				<para>
					Do not use articles in front of product names. For example, do not write "the JBoss Enterprise&nbsp;Application&nbsp;Platform was ...".
				</para>
				 <note>
					<para>
						In this case, "Platform" is part of the product name. In other cases, words like "platform", "manager", and so on might not be part of the product name, in which case an article is acceptable, if not necessary.
					</para>

				</note>

<!-- 		<listitem>
			 </listitem>		-->
				<para>
					Do not use possessives to refer to product names.
					For examples and more information, refer to <xref linkend="possessives"/>.
				</para>

				<para>
					Do not hyphenate or break a product name across lines.
				</para>
				<example>
				<title>Incorrect Example of Line Breaking</title>
				<para>
				<literallayout>
					For advanced management capabilities with Red
					Hat Satellite and cloud management services, use the Red
					Hat Enterprise Linux Smart Management Add
					-On.
				</literallayout>
				</para>
				</example>
<!-- 		<listitem>
			 </itemizedlist>		-->

	</section>
	 <section id="nonbreaking-spaces">
		<title>Using Non-breaking Spaces</title>
		 <important>
			<para>
				The following guidance about using non-breaking spaces applies only to the Red&nbsp;Hat company name and to Red&nbsp;Hat products.
        		Do not use non-breaking spaces with other companies' product names.
			</para>

		</important>
		 <para>
			To keep text together on the same line, use a non-breaking space in the following situations:
		</para>
				 <itemizedlist>
					<listitem>
						<para>
							In the company name, between "Red" and "Hat".
						</para>

					</listitem>
					 <listitem>
						<para>
							In a product name, between the last word and a version number.
						</para>

					</listitem>
					 <listitem>
						<para>
							Between a numeral and a unit of measurement.
						</para>

					</listitem>

				</itemizedlist>
		 <para>
			Examples (for AsciiDoc):
		</para>
				 <itemizedlist>
					<listitem>
						<para>
							Red&#123;nbsp&#125;Hat Enterprise Linux&#123;nbsp&#125;8
						</para>

					</listitem>
					 <listitem>
						<para>
							Red&#123;nbsp&#125;Hat OpenShift Container Platform&#123;nbsp&#125;4.9
						</para>

					</listitem>
					 <listitem>
						<para>
							The <systemitem>crashkernel=auto</systemitem> setting requires at least 1&#123;nbsp&#125;GB of memory.
						</para>

					</listitem>

				</itemizedlist>

		 <para>
			If you are working with images or other objects where space is especially tight, this rule is more flexible, but "Red&nbsp;Hat" should never be broken over two lines.
		</para>
		 <para>
			Non-breaking spaces are not needed elsewhere in a product name and might cause undesirable line-breaking behavior.
			In particular, do not use non-breaking spaces between extended components of Red&nbsp;Hat product names. For example, "Red&nbsp;Hat Enterprise Linux OpenStack Platform" does not require a non-breaking space between any of the words after "Red&nbsp;Hat".
		</para>

	</section>
	 <section id="version-numbers">
		<title>Using Version Numbers Correctly</title>
		 <para>
			The preferred format for product names includes only the major version number. For example:
			<itemizedlist>
				<listitem>
					<para>
						Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;8
					</para>

				</listitem>
				 <listitem>
					<para>
						JBoss Enterprise&nbsp;Application&nbsp;Platform&nbsp;3
					</para>

				</listitem>

			</itemizedlist>

		</para>
		 <para>
			When writing about a product line, product release, or product family, use major version numbers. It includes all the releases (past, present, and future) of that major version.
		</para>
		 <para>
			Only use minor version numbers when you are referring to a specific minor release, or to a feature that is specific to that minor release. For example:
			<itemizedlist>
				<listitem>
					<para>
						Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;5.2 was released on October 12, 2010.
					</para>

				</listitem>
				 <listitem>
					<para>
						&lt;Application name&gt; was first included in JBoss Enterprise&nbsp;Application&nbsp;Platform&nbsp;3.2.
					</para>

				</listitem>

			</itemizedlist>

		</para>
		 <para>
			Major changes usually take place in major version releases, and are carried through any minor updates to that release.
      If you are referring to a major change, or to the first appearance of a new technology, it is therefore most accurate to refer to the major release.
		</para>
		 <para>
			Avoid using the "dot-oh" release number.
      For example, do not use Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;6.0.
      Use instead Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;6.
		</para>
		 <important>
			<para>
				This rule applies only to Red&nbsp;Hat products.
        Refer to other companies' products and use their version numbers as they use them.
			</para>

		</important>

	</section>
	 <section id="admonitions">
		<title>Using Admonitions</title>
		 <para>
			To call attention to a statement, use an admonition.
      Red&nbsp;Hat technical documentation currently uses <systemitem>Note</systemitem>, <systemitem>Important</systemitem>, and <systemitem>Warning</systemitem> admonitions.
		</para>
		 <para>
			Depending on the tools and workflow, admonitions might automatically include a suitable title according to the type of admonition.
      Do not use a phrase or anything else for the title.
      Keep the following considerations in mind if using admonitions:
			<itemizedlist>
				<listitem>
					<para>
						Keep statements brief and to the point.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use admonitions sparingly so that they do not lose their effectiveness.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use a <systemitem>Note</systemitem> admonition to bring extra information to the user's attention.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use an <systemitem>Important</systemitem> admonition to show the user a piece of information that should not be overlooked.
            This information might not change anything that the user is doing, but it should show the user that this piece of information could be vital.
					</para>

				</listitem>
				 <listitem>
					<para>
						Use a <systemitem>Warning</systemitem> admonition to alert the reader to potential changes, such as files being removed, and not to perform the operation unless fully aware of the consequences.
					</para>

				</listitem>

			</itemizedlist>

		</para>

	</section>

	<section id="making-recommendations">
	 <title>Making Recommendations</title>
		<para>
		When making a recommendation, the preferred verbiage is "Red&nbsp;Hat recommends ..." instead of the common but indirect "It is recommended ...".
		Recommendations can include best practices, recommended practices, and product-specific suggestions.
		Refer to <xref linkend="avoiding-confusing-language"/> for information on using the terms "best practices" and "recommended practices" in Red&nbsp;Hat documentation.
	  </para>
		<example>
			<title>
				(incorrect)
			</title>
		<para>
	    "Although the attack surface is reduced to the same-project traffic, it is recommended to create multiple service accounts within a project."
	  </para>
	  <para>
		  "It is recommended to generate a service account for each microservice in your project."
	  </para>
	</example>
	<example>
		<title>
			(correct)
		</title>
	  <para>
		"Although the attack surface is reduced to the same-project traffic, Red&nbsp;Hat recommends creating multiple service accounts within a project."
	  </para>
	<para>
  	"Red&nbsp;Hat recommends that you generate a service account for each microservice in your project."
	</para>
</example>
 </section>

<!-- Describe at beginning of guide what it covers, but not to use markup. -->
	 <section id="citing-other-works">
		<title>Citing Other Works</title>
		 <formalpara id="other-books">
			<title>Referencing Other Publications</title>
			 <para>
				When referencing another publication, either internal or external to Red&nbsp;Hat, use the following format:
			</para>

		</formalpara>
		<!--  <para>
			In XML:
		</para> -->

<programlisting>
<!-- &lt;citetitle&gt;Publication Title&lt;/citetitle&gt; by &lt;author&gt;&lt;firstname&gt;First name&lt;/firstname&gt;&lt;surname&gt;Surname&lt;/surname&gt;&lt;/author&gt;; Publisher. -->
Publication Title by First name Surname; Publisher.
</programlisting>

		 <para>
			For example, <citetitle>Maximum RPM</citetitle> by Edward Bailey; Red&nbsp;Hat Press.
			<!-- <author>
				<firstname>Edward</firstname>
				 <surname>Bailey</surname>

			</author> -->
		</para>
		 <formalpara id="other-websites">
			<title>Referencing Other Internet Sites</title>
			 <para>
				When referencing another internet site, use the following guidelines:
			</para>

		</formalpara>
		 <itemizedlist>
			<listitem>
				<para>
					Do not link words within the body text. That is, do not use structures such as "Go <ulink url="somewhere.com">here</ulink> for more information", where "here" is a link.
				</para>

			</listitem>
			 <listitem>
				<para>
					Short URLs, such as <ulink url="http://partner.redhat.com">http://partner.redhat.com</ulink>, are OK to use in body text at your discretion.
				</para>

			</listitem>
			 <listitem>
				<para>
					If the URL is long or complex, then create a link by using the title of the destination as a label, and put the URL in a footnote. 
					For example: Refer to the <ulink url="https://www.britannica.com/animal/mammal/Classification"><citetitle>Classification of Species</citetitle></ulink><footnote> <para>
						<ulink url="https://www.britannica.com/animal/mammal/Classification" />
					</para>
					 </footnote> page for more information.
				</para>

			</listitem>

		</itemizedlist>

	</section>

<!-- <section id="other-authors">
		<title>Citing Other Authors</title>
		 <para>
			DocBook provides the &lt;blockquote&gt; and &lt;attribution&gt; tags for this purpose, but how they should be rendered is currently being discussed. For example:
		</para>
		 <blockquote>
			<attribution>Thomas Jefferson</attribution> <para>
				Why use two words when one will do?
			</para>

		</blockquote>

	</section>
-->
</chapter>
